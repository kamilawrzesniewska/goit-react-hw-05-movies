{"version":3,"file":"static/js/247.5f6e5854.chunk.js","mappings":"qLA0CA,UAtCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAASC,EAAAA,EAAAA,IAAeH,GAAxBE,KAER,OAAKA,GAGH,0BACE,wBACGA,EAAKE,KAAI,SAAAC,GACR,OACE,0BAC0B,OAAvBA,EAAMC,cACL,cACEC,MAAO,CACLC,SAAU,OACVC,OAAQ,KAHZ,qBASA,gBACEC,IAAG,0CAAqCL,EAAMC,cAC9CK,IAAG,UAAKN,EAAMO,MACdC,MAAM,QAGV,uBAAIR,EAAMO,QACV,uCAAeP,EAAMS,eAlBdT,EAAMU,GAqBlB,SA5BW,SAAC,IAAD,GAgCnB,C,6LCtCKC,EAAU,mCACVC,EAAW,gCAIXC,EAAiB,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBD,IAHrB,cAEhBK,EAFgB,yBAMfF,EAAUE,EAASC,KAAKC,UANT,gCAQtBC,QAAQC,IAAR,UAAe,KAAMb,KAArB,aAA8B,KAAMc,UARd,yDAAH,sDAcjBC,EAAc,mCAAG,WAAO3B,EAAS4B,GAAhB,gGAEIR,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,oBACkBgB,EADlB,oBAFJ,cAEbK,EAFa,yBAMZO,EAASP,EAASC,OANN,gCAQnBE,QAAQC,IAAR,UAAe,KAAMb,KAArB,aAA8B,KAAMc,UARjB,yDAAH,wDAcdvB,EAAc,mCAAG,WAAOH,EAAS6B,GAAhB,gGAEIT,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,4BAC0BgB,EAD1B,oBAFJ,cAEbK,EAFa,yBAMZQ,EAAQR,EAASC,KAAKpB,OANV,gCAQnBsB,QAAQC,IAAR,UAAe,KAAMb,KAArB,aAA8B,KAAMc,UARjB,yDAAH,wDAcdI,EAAiB,mCAAG,WAAO9B,EAAS+B,GAAhB,gGAECX,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDjB,EADC,4BAC0BgB,EAD1B,oBAFD,cAEhBK,EAFgB,yBAMfU,EAAWV,EAASC,KAAKC,UANV,gCAQtBC,QAAQC,IAAR,UAAe,KAAMb,KAArB,aAA8B,KAAMc,UARd,yDAAH,wDAcjBM,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,kGAECd,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BiB,EAD/B,gCAFD,cAEhBZ,EAFgB,OAKhBC,EAAOD,EAASC,KAAKC,QALL,kBAMfW,EAAkBZ,IANH,gCAQtBE,QAAQC,IAAR,UAAe,KAAMb,KAArB,aAA8B,KAAMc,UARd,yDAAH,uD","sources":["components/Cast/Cast.jsx","utils/apiSupport.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'utils/apiSupport';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { cast } = fetchMovieCast(movieId);\n\n  if (!cast) return <Loader />;\n\n  return (\n    <div>\n      <ul>\n        {cast.map(actor => {\n          return (\n            <li key={actor.id}>\n              {actor.profile_path === null ? (\n                <p\n                  style={{\n                    fontSize: '80px',\n                    margin: '0',\n                  }}\n                >\n                  &#10068;\n                </p>\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                  alt={`${actor.name}`}\n                  width=\"90\"\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = 'df53404ad79b05696f1c854db3da46e1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// fetching function for the most popular movies of the day\n\nconst fetchTrendyMovies = async setMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setMovies(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching function the movie by id\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching characters in the movie by the id of the movie\n\nconst fetchMovieCast = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching reviews about the movie by the id of the movie\n\nconst fetchMovieReviews = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching the movies by query\n\nconst fetchMovieByQuery = async (query, setSearchedMovies) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    const data = response.data.results;\n    return setSearchedMovies(data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport {\n  fetchMovieById,\n  fetchTrendyMovies,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieByQuery,\n};"],"names":["movieId","useParams","cast","fetchMovieCast","map","actor","profile_path","style","fontSize","margin","src","alt","name","width","character","id","API_KEY","BASE_URL","fetchTrendyMovies","setMovies","axios","response","data","results","console","log","message","fetchMovieById","setMovie","setCast","fetchMovieReviews","setReviews","fetchMovieByQuery","query","setSearchedMovies"],"sourceRoot":""}