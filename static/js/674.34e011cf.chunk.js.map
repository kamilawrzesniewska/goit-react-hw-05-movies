{"version":3,"file":"static/js/674.34e011cf.chunk.js","mappings":"sKACA,OAAiB,E,6CCsCjB,EAjCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACXC,EAAwDC,EAAAA,YAA3CC,EAA2CD,EAAAA,YAA9BE,EAA8BF,EAAAA,aAAhBG,EAAgBH,EAAAA,YAC1DI,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWL,EAAf,SACGH,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAd,OACV,eAAIJ,UAAWP,EAAf,UACE,UAAC,KAAD,CACEO,UAAWH,EACXQ,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMT,GAHjB,UAKGM,GACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAG,oBAAeP,MAGpB,gBAAKM,IAAKE,EAAgBD,IAAG,iBAE/B,cAAGT,UAAWJ,EAAd,SAA6BM,QAdAC,EADvB,KAqBjB,C,gFChCD,GAAiB,E,oCCqBjB,EAjBiB,WACf,IAAQQ,EAAuBjB,EAAAA,UAAZkB,EAAYlB,EAAAA,QAE/B,GAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAkBF,GAAWG,MAAMC,QAAQC,MAC5C,GAAE,KAGD,kBAAMnB,UAAWW,EAAjB,WACE,eAAIX,UAAWY,EAAf,6BACA,SAACQ,EAAA,EAAD,CAAW5B,OAAQA,MAGxB,C,6LClBK6B,EAAU,mCACVC,EAAW,gCAIXN,EAAiB,mCAAG,WAAMF,GAAN,gGAECS,EAAAA,GAAAA,IAAA,UAClBD,EADkB,sCACoBD,IAHrB,cAEhBG,EAFgB,yBAMfV,EAAUU,EAASC,KAAKC,UANT,gCAQtBR,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARd,yDAAH,sDAcjBC,EAAc,mCAAG,WAAOC,EAASC,GAAhB,gGAEIT,EAAAA,GAAAA,IAAA,UAClBD,EADkB,iBACDS,EADC,oBACkBV,EADlB,oBAFJ,cAEbG,EAFa,yBAMZQ,EAASR,EAASC,OANN,gCAQnBP,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARjB,yDAAH,wDAcdI,EAAc,mCAAG,WAAOF,EAASG,GAAhB,gGAEIX,EAAAA,GAAAA,IAAA,UAClBD,EADkB,iBACDS,EADC,4BAC0BV,EAD1B,oBAFJ,cAEbG,EAFa,yBAMZU,EAAQV,EAASC,KAAKU,OANV,gCAQnBjB,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARjB,yDAAH,wDAcdO,EAAiB,mCAAG,WAAOL,EAASM,GAAhB,gGAECd,EAAAA,GAAAA,IAAA,UAClBD,EADkB,iBACDS,EADC,4BAC0BV,EAD1B,oBAFD,cAEhBG,EAFgB,yBAMfa,EAAWb,EAASC,KAAKC,UANV,gCAQtBR,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARd,yDAAH,wDAcjBS,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,kGAECjB,EAAAA,GAAAA,IAAA,UAClBD,EADkB,gCACcD,EADd,kBAC+BkB,EAD/B,gCAFD,cAEhBf,EAFgB,OAKhBC,EAAOD,EAASC,KAAKC,QALL,kBAMfc,EAAkBf,IANH,gCAQtBP,QAAQS,IAAR,UAAe,KAAMC,KAArB,aAA8B,KAAMC,UARd,yDAAH,uD","sources":["components/MovieList/MovieList.module.css","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.module.css","pages/HomePage/HomePage.jsx","utils/apiSupport.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import styles from './MovieList.module.css';\nimport placeholderImg from '../../components/img/xxclose.png';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const { movie__item, movie__list, movie__title, movie__link } = styles;\n  const location = useLocation();\n\n  return (\n    <ul className={movie__list}>\n      {movies.map(({ title, id, poster_path }) => (\n        <li className={movie__item} key={id}>\n          <Link\n            className={movie__link}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={`Poster of ${title}`}\n              />\n            ) : (\n              <img src={placeholderImg} alt={`Placeholder`} />\n            )}\n            <p className={movie__title}>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './HomePage.module.css';\nimport React, { useState, useEffect } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { fetchTrendyMovies } from 'utils/apiSupport';\n\nconst HomePage = () => {\n  const { container, heading } = styles;\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendyMovies(setMovies).catch(console.error);\n  }, []);\n\n  return (\n    <main className={container}>\n      <h1 className={heading}>Trending today</h1>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default HomePage;","import axios from 'axios';\n\nconst API_KEY = 'df53404ad79b05696f1c854db3da46e1';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n// fetching function for the most popular movies of the day\n\nconst fetchTrendyMovies = async setMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return setMovies(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching function the movie by id\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setMovie(response.data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching characters in the movie by the id of the movie\n\nconst fetchMovieCast = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching reviews about the movie by the id of the movie\n\nconst fetchMovieReviews = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\n// fetching the movies by query\n\nconst fetchMovieByQuery = async (query, setSearchedMovies) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    const data = response.data.results;\n    return setSearchedMovies(data);\n  } catch (error) {\n    console.log(`${error.name}: ${error.message}`);\n  }\n};\n\nexport {\n  fetchMovieById,\n  fetchTrendyMovies,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieByQuery,\n};"],"names":["movies","movie__item","styles","movie__list","movie__title","movie__link","location","useLocation","className","map","title","id","poster_path","to","state","from","src","alt","placeholderImg","container","heading","useState","setMovies","useEffect","fetchTrendyMovies","catch","console","error","MovieList","API_KEY","BASE_URL","axios","response","data","results","log","name","message","fetchMovieById","movieId","setMovie","fetchMovieCast","setCast","cast","fetchMovieReviews","setReviews","fetchMovieByQuery","query","setSearchedMovies"],"sourceRoot":""}